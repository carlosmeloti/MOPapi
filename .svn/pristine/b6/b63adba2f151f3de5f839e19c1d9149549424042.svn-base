package br.embrapa.repository.consultas;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import org.springframework.util.StringUtils;

import br.embrapa.model.CadEmpresa;
import br.embrapa.model.CadEmpresa_;
import br.embrapa.repository.filter.CadEmpresaFilter;

public class CadEmpresaRepositoryImpl implements CadEmpresaRepositoryQuery {

	
	@PersistenceContext
	private EntityManager manager;
	
	@Override
	public List<CadEmpresa> filtrar(CadEmpresaFilter cadEmpresFilter) {
		CriteriaBuilder builder = manager.getCriteriaBuilder();
		CriteriaQuery<CadEmpresa> criteria = builder .createQuery(CadEmpresa.class);
		Root<CadEmpresa> root = criteria.from(CadEmpresa.class);
		
		Predicate[] predicates = criarRestricoes(cadEmpresFilter, builder, root);
		criteria.where(predicates);
		
		TypedQuery<CadEmpresa> query = manager.createQuery(criteria);
		return query.getResultList();
	}

	private Predicate[] criarRestricoes(CadEmpresaFilter cadEmpresaFilter, CriteriaBuilder builder,
			Root<CadEmpresa> root) {
		
		List<Predicate> predicates = new ArrayList<>();
		if(!StringUtils.isEmpty(cadEmpresaFilter.getNmEmpresa())) {
			predicates.add(builder.like(
					builder.lower(root.get(CadEmpresa_.nmEmpresa)), "%" + cadEmpresaFilter.getNmEmpresa().toLowerCase() + "%"));
		}
		
		return predicates.toArray(new Predicate[predicates.size()]);
	}

}
